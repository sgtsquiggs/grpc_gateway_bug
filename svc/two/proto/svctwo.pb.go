// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: svctwo/svctwo.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/sgtsquiggs/grpc_gateway_bug/svc/one/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_svctwo_svctwo_proto protoreflect.FileDescriptor

var file_svctwo_svctwo_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x76, 0x63, 0x74, 0x77, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x74, 0x77, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x76, 0x63, 0x74, 0x77, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x76, 0x63,
	0x6f, 0x6e, 0x65, 0x2f, 0x73, 0x76, 0x63, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x32, 0x6d, 0x0a, 0x06, 0x53, 0x56, 0x43, 0x54, 0x77, 0x6f, 0x12, 0x63, 0x0a, 0x0a, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x6f, 0x6e,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x76, 0x63, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x7b, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x7d, 0x3a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x01, 0x2a, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x67,
	0x74, 0x73, 0x71, 0x75, 0x69, 0x67, 0x67, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x67, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x74, 0x77,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_svctwo_svctwo_proto_goTypes = []interface{}{
	(*proto1.ExportDataRequest)(nil),  // 0: svcone.ExportDataRequest
	(*proto1.ExportDataResponse)(nil), // 1: svcone.ExportDataResponse
}
var file_svctwo_svctwo_proto_depIdxs = []int32{
	0, // 0: svctwo.SVCTwo.ExportData:input_type -> svcone.ExportDataRequest
	1, // 1: svctwo.SVCTwo.ExportData:output_type -> svcone.ExportDataResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_svctwo_svctwo_proto_init() }
func file_svctwo_svctwo_proto_init() {
	if File_svctwo_svctwo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svctwo_svctwo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svctwo_svctwo_proto_goTypes,
		DependencyIndexes: file_svctwo_svctwo_proto_depIdxs,
	}.Build()
	File_svctwo_svctwo_proto = out.File
	file_svctwo_svctwo_proto_rawDesc = nil
	file_svctwo_svctwo_proto_goTypes = nil
	file_svctwo_svctwo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SVCTwoClient is the client API for SVCTwo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SVCTwoClient interface {
	ExportData(ctx context.Context, in *proto1.ExportDataRequest, opts ...grpc.CallOption) (*proto1.ExportDataResponse, error)
}

type sVCTwoClient struct {
	cc grpc.ClientConnInterface
}

func NewSVCTwoClient(cc grpc.ClientConnInterface) SVCTwoClient {
	return &sVCTwoClient{cc}
}

func (c *sVCTwoClient) ExportData(ctx context.Context, in *proto1.ExportDataRequest, opts ...grpc.CallOption) (*proto1.ExportDataResponse, error) {
	out := new(proto1.ExportDataResponse)
	err := c.cc.Invoke(ctx, "/svctwo.SVCTwo/ExportData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SVCTwoServer is the server API for SVCTwo service.
type SVCTwoServer interface {
	ExportData(context.Context, *proto1.ExportDataRequest) (*proto1.ExportDataResponse, error)
}

// UnimplementedSVCTwoServer can be embedded to have forward compatible implementations.
type UnimplementedSVCTwoServer struct {
}

func (*UnimplementedSVCTwoServer) ExportData(context.Context, *proto1.ExportDataRequest) (*proto1.ExportDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportData not implemented")
}

func RegisterSVCTwoServer(s *grpc.Server, srv SVCTwoServer) {
	s.RegisterService(&_SVCTwo_serviceDesc, srv)
}

func _SVCTwo_ExportData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.ExportDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SVCTwoServer).ExportData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svctwo.SVCTwo/ExportData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SVCTwoServer).ExportData(ctx, req.(*proto1.ExportDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SVCTwo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svctwo.SVCTwo",
	HandlerType: (*SVCTwoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExportData",
			Handler:    _SVCTwo_ExportData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svctwo/svctwo.proto",
}
